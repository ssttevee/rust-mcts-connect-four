{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../pkg/libc4.js","../node_modules/svelte/store/index.mjs","../web/Board.svelte","../web/Game.svelte","../web/App.svelte","../web/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","\nlet wasm;\n\nlet cachegetInt32Memory = null;\nfunction getInt32Memory() {\n    if (cachegetInt32Memory === null || cachegetInt32Memory.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory;\n}\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction getArrayJsValueFromWasm(ptr, len) {\n    const mem = getUint32Memory();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction passArrayJsValueToWasm(array) {\n    const ptr = wasm.__wbindgen_malloc(array.length * 4);\n    const mem = getUint32Memory();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport const Token = Object.freeze({ Player1:0,Player2:1, });\n/**\n*/\nexport class Board {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Board.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_board_free(ptr);\n    }\n    /**\n    * @param {number} col\n    * @param {number} row\n    * @returns {number}\n    */\n    token_at(col, row) {\n        const ret = wasm.board_token_at(this.ptr, col, row);\n        return ret === 2 ? undefined : ret;\n    }\n    /**\n    * @param {number} col\n    * @param {number} row\n    * @param {number} token\n    */\n    fill(col, row, token) {\n        wasm.board_fill(this.ptr, col, row, token);\n    }\n    /**\n    * @param {number} cols\n    * @param {number} rows\n    * @returns {Board}\n    */\n    constructor(cols, rows) {\n        const ret = wasm.board_new(cols, rows);\n        return Board.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    cols() {\n        const ret = wasm.board_cols(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    rows() {\n        const ret = wasm.board_rows(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class Game {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Game.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_game_free(ptr);\n    }\n    /**\n    * @returns {boolean}\n    */\n    over() {\n        const ret = wasm.game_over(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {number}\n    */\n    current_player() {\n        const ret = wasm.game_current_player(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    cols() {\n        const ret = wasm.game_cols(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    rows() {\n        const ret = wasm.game_rows(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    state() {\n        const retptr = 8;\n        const ret = wasm.game_state(retptr, this.ptr);\n        const memi32 = getInt32Memory();\n        const v0 = getArrayU8FromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n        wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n        return v0;\n    }\n    /**\n    * @returns {Board}\n    */\n    board() {\n        const ret = wasm.game_board(this.ptr);\n        return Board.__wrap(ret);\n    }\n    /**\n    * @param {number | undefined} cols\n    * @param {number | undefined} rows\n    * @param {number | undefined} win_length\n    * @returns {Game}\n    */\n    constructor(cols, rows, win_length) {\n        const ret = wasm.game_ctor(!isLikeNone(cols), isLikeNone(cols) ? 0 : cols, !isLikeNone(rows), isLikeNone(rows) ? 0 : rows, !isLikeNone(win_length), isLikeNone(win_length) ? 0 : win_length);\n        return Game.__wrap(ret);\n    }\n    /**\n    * @returns {any[]}\n    */\n    valid_moves() {\n        const retptr = 8;\n        const ret = wasm.game_valid_moves(retptr, this.ptr);\n        const memi32 = getInt32Memory();\n        const v0 = getArrayJsValueFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n        wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 4);\n        return v0;\n    }\n    /**\n    * @returns {number}\n    */\n    winner() {\n        const ret = wasm.game_winner(this.ptr);\n        return ret === 2 ? undefined : ret;\n    }\n    /**\n    * @returns {any[]}\n    */\n    winner_cells() {\n        const retptr = 8;\n        const ret = wasm.game_winner_cells(retptr, this.ptr);\n        const memi32 = getInt32Memory();\n        let v0;\n        if (memi32[retptr / 4 + 0] !== 0) {\n            v0 = getArrayJsValueFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n            wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 4);\n        }\n        return v0;\n    }\n    /**\n    * @param {number} col\n    * @returns {number}\n    */\n    drop(col) {\n        const ret = wasm.game_drop(this.ptr, col);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class MCTS {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MCTS.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_mcts_free(ptr);\n    }\n    /**\n    * @returns {MCTS}\n    */\n    constructor() {\n        const ret = wasm.mcts_new();\n        return MCTS.__wrap(ret);\n    }\n    /**\n    * @param {Game} game\n    * @returns {any[]}\n    */\n    simulate(game) {\n        const retptr = 8;\n        _assertClass(game, Game);\n        const ret = wasm.mcts_simulate(retptr, this.ptr, game.ptr);\n        const memi32 = getInt32Memory();\n        const v0 = getArrayJsValueFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n        wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 4);\n        return v0;\n    }\n    /**\n    * @param {Game} game\n    * @param {number} duration\n    * @returns {any[]}\n    */\n    think(game, duration) {\n        const retptr = 8;\n        _assertClass(game, Game);\n        const ret = wasm.mcts_think(retptr, this.ptr, game.ptr, duration);\n        const memi32 = getInt32Memory();\n        const v0 = getArrayJsValueFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n        wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 4);\n        return v0;\n    }\n    /**\n    * @param {Uint8Array} state\n    * @param {any[]} moves\n    * @returns {any[]}\n    */\n    move_weights(state, moves) {\n        const retptr = 8;\n        const ret = wasm.mcts_move_weights(retptr, this.ptr, passArray8ToWasm(state), WASM_VECTOR_LEN, passArrayJsValueToWasm(moves), WASM_VECTOR_LEN);\n        const memi32 = getInt32Memory();\n        const v0 = getArrayJsValueFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n        wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 4);\n        return v0;\n    }\n}\n\nfunction init(module) {\n    if (typeof module === 'undefined') {\n        module = import.meta.url.replace(/\\.js$/, '_bg.wasm');\n    }\n    let result;\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        const ret = JSON.parse(getStringFromWasm(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_random_3d74d328ba8726a5 = function() {\n        const ret = Math.random();\n        return ret;\n    };\n    imports.wbg.__wbg_now_905b1ca2d46dea4e = function() {\n        const ret = Date.now();\n        return ret;\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg0);\n        if (typeof(obj) === 'number') return obj;\n        getUint8Memory()[arg1] = 1;\n        const ret = 0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n\n    if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                return response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return wasm;\n    });\n}\n\nexport default init;\n\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (!stop) {\n                return; // not ready\n            }\n            subscribers.forEach((s) => s[1]());\n            subscribers.forEach((s) => s[0](value));\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    const invalidators = [];\n    const store = readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            run_all(invalidators);\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n    return {\n        subscribe(run, invalidate = noop) {\n            invalidators.push(invalidate);\n            const unsubscribe = store.subscribe(run, invalidate);\n            return () => {\n                const index = invalidators.indexOf(invalidate);\n                if (index !== -1) {\n                    invalidators.splice(index, 1);\n                }\n                unsubscribe();\n            };\n        }\n    };\n}\n\nexport { derived, readable, writable };\n","<script>\n    import { createEventDispatcher, onDestroy } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\tfunction clickColumn(col) {\n\t\tdispatch('column', col + 1);\n\t}\n\n    export let board;\n    export let moves;\n    export let disabled;\n    \n    let num_cols;\n    let num_rows;\n    let grid;\n\n    onDestroy(board.subscribe((board) => {\n        num_cols = board.cols();\n        num_rows = board.rows();\n        grid = Array.from({length: num_rows}, (_, row) => Array.from({length: num_cols}, (_, col) => [col, num_rows - row - 1, board.token_at(col, num_rows - row - 1)]))\n    }));\n\n    let valid_moves;\n\n    let hovered_column = null;\n\n    onDestroy(moves.subscribe((moves) => {\n        valid_moves = moves.map((col) => col - 1);\n        if (hovered_column !== null && !valid_moves.includes(hovered_column)) {\n            hovered_column = null;\n        }\n    }));\n</script>\n\n<style>\ntd {\n    width: 50px;\n    height: 50px;\n    border: 1px gray solid;\n}\ntd.highlighted {\n    background-color: aquamarine;\n}\n</style>\n\n<table on:mouseout={() => hovered_column = null}>\n{#each grid as cells}\n    <tr>\n    {#each cells as [col, row, token]}\n        <td\n            on:click={() => !$disabled && valid_moves.includes(col) && clickColumn(col)}\n            on:mouseover={() => hovered_column = valid_moves.includes(col) ? col : null}\n            class=\"{hovered_column == col ? 'highlighted' : ''}\"\n        >\n        {#if token === undefined}\n            &nbsp;\n        {:else}\n            {token}\n        {/if}\n        </td>\n    {/each}\n    </tr>\n{/each}\n</table>\n","<script>\n    import { writable, get } from 'svelte/store';\n\n    import Board from './Board.svelte';\n    import { Game, MCTS } from '../pkg';\n\n    let mcts = new MCTS();\n    \n    let game = null;\n    let winner = null;\n\n    function newgame() {\n        if (game) {\n            game.free();\n        }\n\n        const g = new Game();\n\n        const { subscribe: subscribeBoard, set: setBoard } = writable(g.board());\n        const { subscribe: subscribeMoves, set: setMoves } = writable(g.valid_moves());\n        const { subscribe: subscribeDisabled, set: setDisabled } = writable(false);\n\n        function checkGameOver() {\n            const prevBoard = get(game.board);\n            setBoard(g.board());\n            prevBoard.free();\n            if (g.over()) {\n                const w = winner = g.winner();\n                if (w === null) {\n                    winner = 'It\\'s a tie!';\n                } else if (w === 0) {\n                    winner = 'You win!';\n                } else {\n                    winner = 'You lose!';\n                }\n\n                console.log(winner);\n\n                setDisabled(true);\n                setMoves([]);\n                return true;\n            }\n        }\n\n        winner = null;\n        game = {\n            board: { subscribe: subscribeBoard },\n            moves: { subscribe: subscribeMoves },\n            thinking: { subscribe: subscribeDisabled },\n            drop: (col) => {\n                console.log('dropped in column', col);\n                g.drop(col);\n                if (checkGameOver()) {\n                    return\n                }\n\n                setDisabled(true);\n\n                const moves = g.valid_moves();\n                setMoves(moves);\n\n                console.log(mcts.think(g, 1000));\n                const weights = mcts.move_weights(g.state(), moves);\n                console.log(weights);\n                let best_move = moves.reduce((best, _, i) => i == best || weights[best] > weights[i] ? best : i, 0);\n                g.drop(moves[best_move]);\n\n                if (checkGameOver()) {\n                    return\n                }\n                \n                setDisabled(false);\n                setMoves(g.valid_moves());\n            },\n            free() {\n                g.free();\n                get(game.board).free();\n            },\n        };\n    }\n</script>\n\n{#if game}\n    <Board\n        board={game.board}\n        moves={game.moves}\n        disabled={game.thinking}\n        on:column={(event) => game.drop(event.detail)}\n    />\n\n    {#if winner}\n        {winner}\n        <button on:click={() => game = null}>Back</button>\n    {/if}\n{/if}\n\n{#if !game}\n    <button on:click={newgame}>New Game</button>\n{/if}","<script>\n    import Game from './Game.svelte';\n    import init from '../pkg';\n</script>\n\n{#await init()}\n    <h1>loading...</h1>\n{:then _}\n    <Game/>\n{:catch err}\n    <h1>Error: {err.message}</h1>\n{/await}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","current_component","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","wasm","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","key","resolved","[object Object]","child_ctx","current","blocks","m","mount","then","error","catch","pending","get_store_value","store","unsubscribe","subscribe","_","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","hydrate","l","Array","from","childNodes","intro","SvelteComponent","this","$destroy","indexOf","splice","writable","start","stop","subscribers","set","new_value","s","invalidate","subscriber","undefined","hovered_column","col","click_handler","mouseover_handler","cells","grid","dispatch","clickColumn","num_cols","num_rows","valid_moves","board","moves","disabled","unsub","cols","rows","row","token_at","includes","cachegetInt32Memory","getInt32Memory","buffer","memory","Int32Array","cachegetUint8Memory","getUint8Memory","Uint8Array","isLikeNone","x","cachegetUint32Memory","getUint32Memory","Uint32Array","heap","getObject","idx","fill","heap_next","takeObject","ret","dropObject","getArrayJsValueFromWasm","ptr","len","subarray","result","_assertClass","klass","WASM_VECTOR_LEN","addHeapObject","obj","cachedTextDecoder","TextDecoder","getStringFromWasm","decode","freeze","Player1","Player2","Board","prototype","__wbg_board_free","board_token_at","board_fill","board_new","__wrap","board_cols","board_rows","Game","__wbg_game_free","game_over","game_current_player","game_cols","game_rows","game_state","memi32","v0","retptr","__wbindgen_free","game_board","win_length","game_ctor","game_valid_moves","game_winner","game_winner_cells","game_drop","MCTS","__wbg_mcts_free","mcts_new","game","mcts_simulate","duration","mcts_think","state","mcts_move_weights","arg","__wbindgen_malloc","passArray8ToWasm","array","mem","passArrayJsValueToWasm","module","replace","imports","wbg","__wbindgen_number_new","arg0","__wbindgen_json_parse","arg1","JSON","parse","__wbindgen_string_new","__wbg_random_3d74d328ba8726a5","Math","random","__wbg_now_905b1ca2d46dea4e","Date","now","__wbindgen_object_drop_ref","__wbindgen_number_get","__wbindgen_throw","__wbindgen_rethrow","URL","Request","response","fetch","WebAssembly","instantiateStreaming","console","warn","arrayBuffer","bytes","instantiate","Instance","exports","__wbindgen_wasm_module","thinking","winner","newgame","mcts","free","g","subscribeBoard","setBoard","subscribeMoves","setMoves","subscribeDisabled","setDisabled","checkGameOver","prevBoard","get","over","w","log","drop","think","weights","move_weights","best_move","reduce","best","err","message","body"],"mappings":"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"}